{
  "name": "winston-papertrail",
  "description": "A Papertrail transport for winston",
  "version": "0.1.4",
  "author": {
    "name": "Ken Perkins",
    "email": "ken.perkins@rackspace.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/kenperkins/winston-papertrail.git"
  },
  "keywords": [
    "logging",
    "sysadmin",
    "tools",
    "winston",
    "papertrail"
  ],
  "devDependencies": {
    "winston": ">=0.6.x",
    "vows": "0.5.x"
  },
  "peerDependencies": {
    "winston": ">=0.6.x"
  },
  "main": "./lib/winston-papertrail",
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# winston-papertrail\n\nA Papertrail transport for [winston][0].\n\n## Installation\n\n### Installing npm (node package manager)\n\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing winston-papertrail\n\n``` bash\n  $ npm install winston\n  $ npm install winston-papertrail\n```\n\nThere are a few required options for logging to Papertrail:\n\n* __host:__ FQDN or IP Address of the Papertrail Service Endpoint\n* __port:__ The TLS Endpoint TCP Port\n\n## Usage\n``` js\n  var winston = require('winston');\n\n  //\n  // Requiring `winston-papertrail` will expose\n  // `winston.transports.Papertrail`\n  //\n  require('winston-papertrail').Papertrail;\n\n  var logger = new winston.Logger({\n  \ttransports: [\n  \t\tnew winston.transports.Papertrail({\n  \t\t\thost: 'logs.papertrailapp.com',\n  \t\t\tport: 12345\n  \t\t})\n  \t]\n  });\n\n  logger.info('this is my message');\n```\n\nFor more some advanced logging, you can take advantage of custom formatting for\nPapertrail:\n\n``` js\n  var winston = require('winston');\n\n  //\n  // Requiring `winston-papertrail` will expose\n  // `winston.transports.Papertrail`\n  //\n  require('winston-papertrail').Papertrail;\n\n  var logger = new winston.Logger({\n  \ttransports: [\n  \t\tnew winston.transports.Papertrail({\n  \t\t\thost: 'logs.papertrailapp.com',\n  \t\t\tport: 12345,\n  \t\t\tlogFormat: function(level, message) {\n  \t\t\t    return '<<<' + level + '>>> ' + message;\n  \t\t\t}\n  \t\t})\n  \t]\n  });\n\n  logger.info('this is my message');\n```\n\nThe Papertrail transport is also capable of emitting events for `error` and `connect` so you can log to other transports:\n\n``` js\nvar winston = require('winston'),\n\tPapertrail = require('winston-papertrail').Papertrail;\n\nvar logger,\n\tconsoleLogger = new winston.transports.Console({\n\t\tlevel: 'debug',\n\t\ttimestamp: function() {\n\t\t\treturn new Date().toString();\n\t\t},\n\t\tcolorize: true\n\t}),\n\tptTransport = new Papertrail({\n\t\thost: 'logs.papertrailapp.com',\n\t\tport: 12345,\n\t\thostname: 'web-01',\n\t\tlogFormat: function(level, message) {\n\t\t\treturn '[' + level + '] ' + message;\n\t\t}\n\t});\n\nptTransport.on('error', function(err) {\n\tlogger && logger.error(err);\n});\n\nptTransport.on('connect', function(message) {\n\tlogger && logger.info(message);\n});\n\nvar logger = new winston.Logger({\n\tlevels: {\n\t\tdebug: 0,\n\t\tinfo: 1,\n\t\twarn: 2,\n\t\terror: 3\n\t},\n\ttransports: [\n\t\tptTransport,\n\t\tconsoleLogger\n\t]\n});\n\nlogger.info('this is my message ' + new Date().getTime());\n```\n\n### Colorization\n\nThe `winston-papertrail` transport supports colorization with `winston`. Currently, the ANSI codes used for escape sequences are part of the search index, so please be advised when using colorization.\n\n```Javascript\nvar winston = require('winston'),\n    Papertrail = require('winston-papertrail').Papertrail;\n\nvar logger = new winston.Logger({\n    transports: [\n        new Papertrail({\n            host: 'logs.papertrailapp.com',\n            port: 12345, // your port here\n            colorize: true\n        })\n    ]\n});\n\nlogger.info('Hello from colorized winston', logger);\n```\n\n### Closing the transport\n\nAs of `v0.1.3` `winston-papertrail` transport supports closing the transport (and the underlying TLS connection) via the `Winston.Transport` `close` method. Thus, you can enable scenarios where your transport automatically closes when you close the `winston` logger.\n\n```Javascript\nvar winston = require('winston'),\n    Papertrail = require('winston-papertrail').Papertrail;\n\npt = new Papertrail({\n    host: 'logs.papertrailapp.com',\n    port: 12345 // your port here\n});\n\nvar logger = new winston.Logger({\n    transports: [ pt ]\n});\n\npt.on('connect', function () {\n    logger.info('logging before I close');\n    logger.close(); // this closes the underlying TLS connection in the Papertrailt transport\n});\n```\n\nCurrently, the Papertrail transport only supports TLS logging.\n\n\n#### Author: [Ken Perkins](http://blog.clipboard.com)\n\n[0]: https://github.com/flatiron/winston\n",
  "readmeFilename": "README.md",
  "_id": "winston-papertrail@0.1.4",
  "dist": {
    "shasum": "7301473d03a72102060e412b71fbcb00a11cc939",
    "tarball": "http://registry.npmjs.org/winston-papertrail/-/winston-papertrail-0.1.4.tgz"
  },
  "_from": "winston-papertrail@^0.1.4",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "kperkins",
    "email": "ken.perkins@rackspace.com"
  },
  "maintainers": [
    {
      "name": "kperkins",
      "email": "ken@clipboard.com"
    }
  ],
  "directories": {},
  "_shasum": "7301473d03a72102060e412b71fbcb00a11cc939",
  "_resolved": "https://registry.npmjs.org/winston-papertrail/-/winston-papertrail-0.1.4.tgz",
  "bugs": {
    "url": "https://github.com/kenperkins/winston-papertrail/issues"
  },
  "homepage": "https://github.com/kenperkins/winston-papertrail"
}
